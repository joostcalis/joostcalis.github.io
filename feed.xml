<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-03-13T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Hello RSpec!</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/13/week5-hello-rspec.html"/>
    <id>http://blog.url.com/2016/03/13/week5-hello-rspec.html</id>
    <published>2016-03-13T01:00:00+01:00</published>
    <updated>2016-03-13T21:57:45+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Wait what? It is week 5 already? I honestly can&amp;rsquo;t believe how fast the weeks were flying by. By now as a group we had grown pretty close, and beside the fun I got from learning how to code it was just good to see everybody&amp;rsquo;s faces again in the morning and catch up about how things were going. Instead of starting a new project, we continued on the work we had been doing in the weekend. All of us were individually building a review site. Front End in React and for the Back End we build another RESTful API. Still having baseball run through my veins, I chose to build a review site for all MLB ballparks.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Lots of ballparks&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Though I really enjoyed the teamwork it was also nice to be able to really build something completely by yourself. I made sure to have some time free in the weekend to not feel rushed while being busy. I didn&amp;rsquo;t want to have a site with just a couple of ballparks, I really wanted to cover all 30. That did mean though that while creating my seeds I thought more then once: &amp;ldquo;I should really write a method for this&amp;rdquo;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;RSpec stories&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Before even looking at the Front end I wanted to be sure to have the back end up and running. We had been introduced to test driven development and RSpec the week before, but up until now I hadn&amp;rsquo;t really focused on it besides writing some random tests to see if they would pass. Part of the assignment now though was to really focus on TDD while creating the back end. For the first time I made sure to implement tests before writing the next piece of code. Whether a simple action like adding some routing, or creating connections, I wrote tests first and had guard running. It seriously didn&amp;rsquo;t take long for me to see the benefits. I was writing a create method I think and apparently made a small typo somewhere that i didn&amp;rsquo;t catch. When my tests kept failing it didn&amp;rsquo;t take long to find the typo. Now I know this wasn&amp;rsquo;t some huge event worthy of dedicating a whole paragraph to. But since 2 or 3 nights before that I had spent at least an hour rereading my code, too tired to find a similar mistake, I felt it was worth sharing.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;RIP nutty professor&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The things with testing is, that it forces you to take small steps and keep constant confidence that whatever you&amp;rsquo;re coding is working, and not breaking any other parts of your code in the same time. It only works though if you stay disciplined enough to keep writing tests before you create new functionality. All this combined basically meant that the nutty professor had to go. I was a bit reluctant to let him go at first. I kind of enjoyed the chaos of code now, ask questions later. But soon I also noticed that even with TDD he is still there, he just works a lot more efficient with some discipline.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;React is cool&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Anyway, back to ballparks. Once the Back end was up and running, I started on the React Front end. Even if I think we just touched the tip of the iceberg with what we learned about React it was still good to see that setting it up this time went pretty fast and efficient. All the required functionality was done in no time, which gave me some time to try and get more functionality and actually style the damn thing properly this time. One of the things I got confronted with is that it&amp;rsquo;s not really convenient to have 30 ballparks shown in one long list. I decided I wanted to split them up per league that their teams played in. I added a league attribute in the Back End and my first thought was to just filter my incoming array in the Front End. I found out that doing if statements in Reacts render method isn&amp;rsquo;t really efficient though, and soon decided I better just already create lists per league in the Back End.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Let&amp;rsquo;s go jobhunting!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;So yeah, 5 weeks have flown by. And while it felt a bit like an ending of something it&amp;rsquo;s so cool to realize it is actually just the beginning. The jobhunting starts now. And as much as that seems like a daunting task, I mean we learned so much these weeks but I don&amp;rsquo;t think its even 1 percent of what there is to learn out there, it doesn&amp;rsquo;t compare to the excitement I feel about getting started and continuing to learn more about this amazing world.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Front End fun</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/12/frontend-fun.html"/>
    <id>http://blog.url.com/2016/03/12/frontend-fun.html</id>
    <published>2016-03-12T01:00:00+01:00</published>
    <updated>2016-03-13T22:27:22+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Until now I think I&amp;rsquo;ve hardly written about anything but ruby or ruby on rails. That&amp;rsquo;s partly because the first 3 weeks were mainly focused on this, but also because at first I had this idea in my head that Front End work would fit less with me. I don&amp;rsquo;t see myself as very visually creative, so I assumed that would make it hard to enjoy doing Front End work. This week was gonna prove me how wrong I was about that once again.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Do it!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Our main project for the week was to build a project manager. And not just that, we were gonna build it in a completely new language: React.js
We have this awesome JavaScript teacher, who was also in charge of introducing us to React. He really took us right through the basics and had me at least getting the concept pretty quickly.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;More long nights&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s funny though how through these weeks I kept going through these continuous stages of thinking &amp;ldquo;damn I get it!&amp;rdquo; to &amp;ldquo;oh wait..no I don&amp;rsquo;t&amp;rdquo;. Cause after a pretty good first day where we set up our initial app and components, the second day brought more and more confusion about what was actually going on with handing down props and a lot of this&amp;rsquo;s flying around. I felt myself getting closer and closer to that nutty professor stage I talked about earlier.. Thankfully I recognized the feeling this time and figured it was better to really try and regrasp the concept of how it all worked before writing another letter of code. A very clear explanation from a fellow student who had just had one of those &amp;ldquo;aha&amp;rdquo; moments later (you rock tjin!) I had a clear head again. But I also realized we had to basically rewrite most of our code from scratch since too much had been added without really knowing what it all did. It was gonna be another long night..&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Front End isn&amp;rsquo;t scary&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;For the backend we build a simple RESTful API in rails, where projects and their tasks would be stored and rendered in JSON. It was a really good feeling to see that after 3 weeks Rails already felt so familiar that we had this up and running in no time without any real issues. This also gave me the chance to really spend time oN learning React. Maybe I&amp;rsquo;m starting to repeat myself but man it was fun again! The same puzzling your way to the next step, the same trying to come up with efficient ways to get something to work. I&amp;rsquo;m starting to see a pattern here..&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;More teamwork&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Another thing I really enjoyed this week was being able to help other students who hadn&amp;rsquo;t had that &amp;ldquo;aha&amp;rdquo; moment yet. It&amp;rsquo;s really a lot of fun to be able to help somebody go from being completely frustrated to thinking wait I think I basically get it now. And trying to explain what&amp;rsquo;s in your head to somebody else actually makes you understand what your talking about even more too.&lt;/p&gt;

&lt;p&gt;We ended the week with a well functioning project manager that, especially after some secret zooming in during demo&amp;rsquo;s, looked pretty good too!&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Draw it out&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;One last thing I wanted to add. Whenever you&amp;rsquo;re stuck or feel like you&amp;rsquo;re losing sight of what you&amp;rsquo;re doing, but actually just always before you start working on something, draw it out. It took some time for me to realize this, but this week made it clear to me how important it is. It just makes it so much simpler to see the flow of things and to always know in what part of the code you&amp;rsquo;re working. Just a simple glance at what you drew out or wrote down and you will remember what you were doing and why. And don&amp;rsquo;t make the excuse that you&amp;rsquo;re not good at drawing or whatever, I mean trust me my 4 year old draws better faces than I do.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Coding like a nutty professor</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/11/week3-coding-like-a-nutty-professor.html"/>
    <id>http://blog.url.com/2016/03/11/week3-coding-like-a-nutty-professor.html</id>
    <published>2016-03-11T01:00:00+01:00</published>
    <updated>2016-03-13T22:27:55+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Another week another project. We were building a social media site this time, so say hello to database relations! I mean a user can have posts, those posts can have likes (or hugs in our case) and comments, then a user can make connections with friends, but friends don&amp;rsquo;t really exist, they are just users wearing their friend-hat. Still following? As u can imagine it took some time to figure all these connections out.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Time issues&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Not that we really had the time cause this week we also got introduced to JavaScript and jQuery. At first I didn&amp;rsquo;t really feel much for diving into these languages when ruby still had so many unanswered questions. All the semi-colons, parentheses, comma&amp;rsquo;s and var declarations didn&amp;rsquo;t help either :) Until now I never really got all those people saying I wish the day had more hours, but that&amp;rsquo;s exactly what I caught myself saying after realizing it was 01.00 am once again.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;ActiveRecord issues&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The many challenges this project presented brought out a side of me I didn&amp;rsquo;t really know yet. I was so annoyed with not completely grasping all the connections and how to code them out, that one night I just started typing every possible solution I could think of. All of which failed miserably one way or the other of course :) Code was flying left and right and I started feeling like a nutty professor on a laptop. But all to little effect. Around 2 am I had to admit my defeat and go to bed pissed of and unsatisfied.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;What issues?&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The teachers had already said that there will be times you gotta let a problem go for a while and just do something completely different. Well the next day proved this lesson to be completely on point. We hardly had time to think about our projects with workshops and lectures almost all through the day. Then in the car home I got this clear feeling in my head. All of a sudden I couldn&amp;rsquo;t wait to get on my laptop again, I got it! I think it took an hour and a half to code out what I couldn&amp;rsquo;t figure out in 6 hours the night before. I mean the code was anything but efficient or pretty, but I understood the concept and was able to make it work.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Unordered lists? un-styled lists!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;At the end of the week we managed to have a site that had close to all the functionality we set out for. Cause of the little time we had this week for the project I doubt that more then 5 lines of code were written to style the frontend, with the consequence that in our group any un-styled collection of lists now carries my name. Ah well, I guess I&amp;rsquo;ll wear it with pride :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CabinFever</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/10/week2-Cabins.html"/>
    <id>http://blog.url.com/2016/03/10/week2-Cabins.html</id>
    <published>2016-03-10T01:00:00+01:00</published>
    <updated>2016-03-13T21:43:20+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;After a short weekend, it was time for week 2. And with it came our first real week project. The assignment was to build a Airbnb.com type of website in groups of 4.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Coding is fun!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This was the week that i really fell in love with coding! I mean the endless possibilities of rails, pushing each other to build new functionality, staring at your laptop thinking why in gods name is this not working!?, having to force yourself to go to bed at night cause you wanna keep coding to implement some more functionality. I can tell you it is very, very addictive!&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Teamwork&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This first project also introduced me to the challenges of working in a team. I personally think I&amp;rsquo;m a pretty good team player, I mean my baseball background prepared me for that. But still I found out it can be a challenge. You really need to take the time to catch up with your teammates and discuss the division of tasks, but that can be hard when your laptop is screaming at you: &amp;ldquo;there&amp;rsquo;s a problem come fix me!&amp;rdquo;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Sleep is overrated&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The main issues of this week were mostly about database relations and how to establish connections between for instance a user, the cabins he listed, and the reservations he made. It took some long days and evenings, but I think we succeeded pretty well on fixing all those issues. And did I mention already it was so much fun!&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Devise&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Since we hadn&amp;rsquo;t learned how to create sign up functionality yet, a lot of time the first days was spent on figuring out ways to identify which user was on the site at a particular moment and coming up with inefficient tricks to still connect that user to other models. I thought that this sign up functionality would for sure be very complicated and was kind of nervous about it. Man was I wrong. On Thursday we got introduced to Devise and I couldn&amp;rsquo;t believe how simple it was to implement. Ow and all the new possibilities. U could now check if a user was signed in, build your views dependent on that information, and so much more!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Coding like a novelist</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/09/coding-like-a-novelist.html"/>
    <id>http://blog.url.com/2016/03/09/coding-like-a-novelist.html</id>
    <published>2016-03-09T01:00:00+01:00</published>
    <updated>2016-03-13T21:39:06+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So January 31st was the first day of the bootcamp. And well let&amp;rsquo;s just say I was nervous. Kind of like going to highschool for the first time when you&amp;rsquo;re 12 nervous.    &lt;/p&gt;

&lt;p&gt;I had prepared as much as I could with some codecademy courses about Ruby, Ruby on Rails and JavaScript. But basically this whole coding thing was new to me.     &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;First week&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The first week we mainly focused on simple Ruby code to run in the terminal. As the week progressed the nerves settled down and I started realizing how much fun it was to run into problems and then fixing them even if it took 20 tries to get there. In this first week though, I also developed something completely new to me which I&amp;rsquo;m sure other starting developers have encountered too. A weird new fear for the Enter key! When you don&amp;rsquo;t really know what you&amp;rsquo;re doing yet and haven&amp;rsquo;t even heard of the concept of testing, pressing that Enter key after writing code for 30 minutes with no clue if it will work becomes quite a thing.        &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;About that novelist&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The main project for this week was building a simple store with a shopping cart. Which gets me to the title of this entry. It hadn&amp;rsquo;t really sunk in with me yet that while coding, you may wanna split things up in a lot of small methods or functions. Instead of trying to explain what I mean myself, I think I&amp;rsquo;ll let the initial code of that store speak for itself:&lt;/p&gt;
&lt;div class="highlight ruby"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;store&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"cigs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;max: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="no"&gt;B&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"Milkpowder"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;max: &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="no"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"Wine"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;max: &lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="no"&gt;D&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"Beer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;price: &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;max: &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
       &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Select a product:&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;) &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, price: $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:price&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upcase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_sym&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:A&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:B&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:C&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:D&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"input invalid, please try again&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Select a product:&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;) &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, price: $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:price&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;fruit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upcase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_sym&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"How many would you like?"&lt;/span&gt;
&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;

&lt;span class="n"&gt;fruit1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;item_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;fruit&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="ss"&gt;:price&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;total_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item_price&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;
&lt;span class="n"&gt;receipt&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;total_price&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"you have selected &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; item(s) of &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;fruit1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. One item costs $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;item_price&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,-. So your selection costs $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;total_price&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,-"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"add this to your shoppingcart? (y/n)"&lt;/span&gt;
&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"your complete order now costs $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,-"&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;total_price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"would you like to buy something else? (y/n)"&lt;/span&gt;
&lt;span class="n"&gt;something_else&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;something_else&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"n"&lt;/span&gt;

  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Ok that will be $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,- please. Would you like to pay with pin or cash?"&lt;/span&gt;
  &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;"pin"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;"cash"&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Sorry we dont accept &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;payment_choice&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Please choose between pin or cash"&lt;/span&gt;
    &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"pin"&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"For paying with pin I have to charge 1 euro extra so your bill will be $&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,-"&lt;/span&gt;

  &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;payment_choice&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"cash"&lt;/span&gt;

    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"cash is always good! thanks for visiting my store"&lt;/span&gt;

  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;something_else&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"y"&lt;/span&gt;

  &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;receipt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s right&amp;hellip;One long method full of if statements! why not right&amp;hellip;.&lt;/p&gt;

&lt;p&gt;But hey it worked and I was proud of that :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Coding Adventure</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/07/new-adventure.html"/>
    <id>http://blog.url.com/2016/03/07/new-adventure.html</id>
    <published>2016-03-07T01:00:00+01:00</published>
    <updated>2016-03-13T02:24:52+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;In December 2015 I got an email from a friend of mine about this developers bootcamp starting in January 2016. The first thing that came to mind were all the usual excuses of why not to do something. I had kind of gotten a pro at finding these excuses.. But as cliche as it may sound, for some reason this time it was different.&lt;/p&gt;

&lt;p&gt;Right after those initial thoughts, I started thinking it would be really cool to actually learn how to build things. The thought that soon I might actually be able to make sense of all those weird programming names and use them, seemed both completely unrealistic and incredibly tempting at the same time. So I actually ignored all those excuses in my head and went ahead and wrote an application letter. And man am I glad I did!&lt;/p&gt;

&lt;p&gt;I am typing this after just having finished the 5 week bootcamp. And what a crazy, amazing,
intense but mostly fun 5 weeks they have been. I got introduced to a world that got my juices flowing, that challenged my brain in a way it hadn&amp;rsquo;t been challenged in a long time, but above all, that introduced me to some pretty amazing people. So yeah to me this does feel like the start of a great adventure, I hope that while writing this blog i can translate some of that world into words. If I don&amp;rsquo;t.. well sorry, I&amp;rsquo;m learning how to code, not to write blogs :)&lt;/p&gt;
</content>
  </entry>
</feed>
